{"ast":null,"code":"var _jsxFileName = \"/Users/darshan/Documents/Opstree/code-complexity/severityserver-frontend/src/components/sonar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { marked } from 'marked'; // Import marked library\nimport '../CSS/sonar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws'); // Replace with your WebSocket URL\n    const stompClient = new Client({\n      webSocketFactory: () => socket,\n      onConnect: () => {\n        console.log('Connected');\n        stompClient.subscribe('/sonarmetrics/recieved', message => {\n          setData(JSON.parse(message.body));\n        });\n      },\n      onDisconnect: () => {\n        console.log('Disconnected');\n      }\n    });\n    stompClient.activate();\n    return () => {\n      stompClient.deactivate();\n    };\n  }, []);\n  const handleUpload = async () => {\n    try {\n      setRefreshing(true);\n      const response = await fetch('http://localhost:8080/upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      setRefreshing(false);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setRefreshing(false);\n    }\n  };\n\n  // Default values for when data is not present\n  const defaultData = {\n    masterSeverity: '',\n    metrics: {\n      component: {\n        measures: []\n      }\n    },\n    analytics: {\n      reviews: '',\n      resultSeverities: '',\n      reviewSeverities: ''\n    }\n  };\n  const displayData = data || defaultData;\n  const {\n    masterSeverity,\n    metrics,\n    analytics\n  } = displayData;\n\n  // Convert markdown to HTML for code review\n  let codeReviewHtml = '';\n  if (Array.isArray(analytics.reviews)) {\n    // Join array elements with line breaks\n    codeReviewHtml = analytics.reviews.join('\\n');\n  } else if (typeof analytics.reviews === 'string') {\n    // Use directly if it's a string\n    codeReviewHtml = analytics.reviews;\n  }\n\n  // Convert markdown to HTML using marked\n  codeReviewHtml = marked(codeReviewHtml);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"master-severity\",\n        children: [\"Master Severity: \", masterSeverity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: handleUpload,\n        disabled: refreshing,\n        children: refreshing ? 'Refreshing...' : 'Refresh Metrics'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), refreshing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-parent\",\n      children: metrics.component.measures.length > 0 ? metrics.component.measures.map((metric, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-name\",\n          children: metric.metric\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-value\",\n          children: [metric.value, \" \", metric.period && metric.period.value, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-name\",\n          children: \"No Metrics Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-review\",\n      dangerouslySetInnerHTML: {\n        __html: codeReviewHtml || 'No Reviews Available'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-severity\",\n      children: [\"Result Severity: \", analytics.resultSeverities]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-severity\",\n      children: [\"Review Severity: \", analytics.reviewSeverities]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketComponent, \"+r0eGgPUwQzQNMuaDC4FpOC4vLk=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","Client","SockJS","marked","jsxDEV","_jsxDEV","WebSocketComponent","_s","data","setData","refreshing","setRefreshing","socket","stompClient","webSocketFactory","onConnect","console","log","subscribe","message","JSON","parse","body","onDisconnect","activate","deactivate","handleUpload","response","fetch","method","headers","stringify","ok","Error","result","json","error","defaultData","masterSeverity","metrics","component","measures","analytics","reviews","resultSeverities","reviewSeverities","displayData","codeReviewHtml","Array","isArray","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","metric","index","value","period","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/darshan/Documents/Opstree/code-complexity/severityserver-frontend/src/components/sonar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { marked } from 'marked'; // Import marked library\nimport '../CSS/sonar.css';\n\nconst WebSocketComponent = () => {\n    const [data, setData] = useState(null);\n    const [refreshing, setRefreshing] = useState(false);\n\n    useEffect(() => {\n        const socket = new SockJS('http://localhost:8080/ws'); // Replace with your WebSocket URL\n        const stompClient = new Client({\n            webSocketFactory: () => socket,\n            onConnect: () => {\n                console.log('Connected');\n                stompClient.subscribe('/sonarmetrics/recieved', (message) => {\n                    setData(JSON.parse(message.body));\n                });\n            },\n            onDisconnect: () => {\n                console.log('Disconnected');\n            },\n        });\n\n        stompClient.activate();\n\n        return () => {\n            stompClient.deactivate();\n        };\n    }, []);\n\n    const handleUpload = async () => {\n        try {\n            setRefreshing(true);\n            const response = await fetch('http://localhost:8080/upload', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ data }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const result = await response.json();\n            console.log('Upload successful:', result);\n            setRefreshing(false);\n        } catch (error) {\n            console.error('Upload failed:', error);\n            setRefreshing(false);\n        }\n    };\n\n    // Default values for when data is not present\n    const defaultData = {\n        masterSeverity: '',\n        metrics: {\n            component: {\n                measures: []\n            }\n        },\n        analytics: {\n            reviews: '',\n            resultSeverities: '',\n            reviewSeverities: ''\n        }\n    };\n\n    const displayData = data || defaultData;\n\n    const { masterSeverity, metrics, analytics } = displayData;\n\n    // Convert markdown to HTML for code review\n    let codeReviewHtml = '';\n    if (Array.isArray(analytics.reviews)) {\n        // Join array elements with line breaks\n        codeReviewHtml = analytics.reviews.join('\\n');\n    } else if (typeof analytics.reviews === 'string') {\n        // Use directly if it's a string\n        codeReviewHtml = analytics.reviews;\n    }\n\n    // Convert markdown to HTML using marked\n    codeReviewHtml = marked(codeReviewHtml);\n\n    return (\n        <div className='main'>\n            {/* Header with master severity and upload button */}\n            <div className='header'>\n                <div className='master-severity'>Master Severity: {masterSeverity}</div>\n                <button className='upload-button' onClick={handleUpload} disabled={refreshing}>\n                    {refreshing ? 'Refreshing...' : 'Refresh Metrics'}\n                </button>\n            </div>\n\n            {refreshing && <div className='loader'></div>}\n\n            {/* Display metrics */}\n            <div className='metric-parent'>\n                {metrics.component.measures.length > 0 ? (\n                    metrics.component.measures.map((metric, index) => (\n                        <div key={index} className='metric-box'>\n                            <div className='metric-name'>{metric.metric}</div>\n                            <div className='metric-value'>\n                                {metric.value} {/* Display value directly if not nested */}\n                                {metric.period && metric.period.value} {/* Display nested value if exists */}\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <div className='metric-box'>\n                        <div className='metric-name'>No Metrics Available</div>\n                    </div>\n                )}\n            </div>\n\n            {/* Display code review */}\n            <div className='code-review' dangerouslySetInnerHTML={{ __html: codeReviewHtml || 'No Reviews Available' }} />\n\n            {/* Display result and review severities */}\n            <div className='result-severity'>Result Severity: {analytics.resultSeverities}</div>\n            <div className='review-severity'>Review Severity: {analytics.reviewSeverities}</div>\n        </div>\n    );\n};\n\nexport default WebSocketComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}